<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>