<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIconBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAAK/INwWK6QAAAAlwSFlzAAAO
        wAAADsABataJCQAAAA10RVh0U291cmNlAE51dm9sYaxPNfEAAAAZdEVYdFNvZnR3YXJlAFBhaW50Lk5F
        VCB2My41LjVJivzgAAAdfUlEQVR4Xu1bB3iUVdq9SHUBC4sIosKKKCJYQFxQQKqA0kGkSwmEUKSDSBeQ
        FgGpAlIFpPdOkN6rgIaQQEhCAplMT6Z8085/3m9m6Lur+6+uu8/e5zlPJpmZb+4573nLnZmo/63/rf+t
        3201b9788UaNGs2OjOxm7to1MoO3d9SoUX105crvVitcuPBjfMgjwUf+l66GDRvOXrLkO9hsWTCbbTh5
        8jRWrFiJkSNH+lq3bp1Qt269hdWqVWtZpsyrhfnwHMFn/Zeshg0bPB0V1d1gt2fh/uV0arh6NQnbtu1E
        dPQURER0MdAdm2vVqvlppUqVSvHpuYhs+oX+U1fdunU/mjVrdojy315utxepqenYv/8IvvlmPvr27edo
        0aLF0fr160+pXbt2w9KlSxfk5bIHr/oftGj/hfv3HwrR/GXL6/XDYLDg1KnzWL16AyZMmBygO1KbNWu2
        ul69ehEVK1Z8gZfOSfyx3cENP9qxY8eE9PSMELVfvwIBwG53IiEhGTt37sWMGXPQp08/e6tWrfYyvYbV
        rFnzrbx58z7Kl/vjiUH7Vp04cZLf7w+x+Rcsh0NDUtItHDx4HAsXfodhw0Z4KPKP7DSzKEgbuqMoX/qP
        UUgbNGgwfuvW7aGt/2uXOMPl8iEtzciucoGpshFTp86gO/oa27Vrt61Zs6b9WDvKchu5id/fHSxg2du0
        aXMyMTEptOXfdnk8AVgsWYiLS8KuXQcwd+5CDB063BUREXGiZcuPJ9Sv/2H1AgUK5OPWfp+Zo0mTxq+M
        GDHSrWne0BZ/v+XzgTOHC9eupTFVTmHJkpUYO3YCmCr7S5Ys+Tq3JzXjt12s/n1Wrlwd2tK/b0mqOBwe
        1g0DFi1aDgZmJ7f3anCXv+H6+OOPt1269HNoG3+MdebMZXTq1Dmd22sV3OVvtNj+inCQMWdlOUMv/e9f
        0okOHjyNVq1a3+IW+wV3+hutRo0atl6wYGHopYM2/HdCVmamhmXL1qBKlSqXuMXewZ3+RosdYPHx4yf0
        F5ap7v8NX4DgtUhGSuo9kPse9py7ICJIDZgwITpQrFixHdxim+BO/8FCF5WNyJP5iXrK2l6Vv95SvTnx
        ryo/7/qbrYSnu7xRUVGJRqOZLx7QZ/x/CHYKt+aHm63MTaJubthNcrdB+2ouDZrdCi01Ht4Le+GN+Qbe
        /fOhZdmgefjch12X0DQff/o4K1xCZGRkZo4cOeZwmzWCu71rOTuoota2qqaptepibqm+tLVQyx0t1SGt
        g0r0d1VZgZ7KG+iufJntVPz2OqoLn/IE8cDhpGnTJjWnT58RkFbkcnn0E18QvO3ywkE2HObg4P0OEnWQ
        oIMEHRxqnDY7nIY0uOJOQju6Gp7Nk+Bd2ge+aU3hH1UOGPgU8OkjQF8FDOXPrgru3TOQqb9W+HXuhdvt
        0Vvi+vXbUadOnWvc4gjiThewt1cFPe3UokBnlYXevPBIYnp2YFl+YGdx4GRNIK4DYBwJpPcGFhaGt4Py
        TK+kPufTixD3iNCs+UeTYvYdgEy/dhK1c3OCTFcAmXYHsowZcCTGwnl+L9z7lkJb+wU8czrCN646/INf
        QKB3HqAX99Cf+CIHMOUxYElxBLZXReBUBPyJY+CzLWM6zABmPoa0Cc1x/Mc4GI1WZGW5meuueyCj840b
        JsycORc8UR7kFiOIZ/TNorN6xNtWbccovlhsbYZhJqeINdz6fuIyIVPcWWIPsYxYTyE42o4vgfimKiV3
        dlWHlxEn6Gt0uzo5OkREnk1NiIX76gU4jmyAc/M0aIv6wBPdGL5hb8LftyACPRm9nnzNQcTYXMCcQsDa
        ssCBxsDPAwDD1wwp9xHYjwBf38+9BHEWPhyG17+H+U8BVj+LjM8qImbfIcQnXCdhN6xWxz2w2Zy4cCEB
        /fsPcOfLl28xt/kBIWlM27dVTfApN3GrGckJ4QXEEKIFUZ7gxvAoN5KN4OMEaAJsbQN3e+X74g21ZHct
        1dvUXI20NlMLLrYodOBE71f8+JJR687HyrWHk2x0Pj2K2F4FON0ZuD4GsMxlYm/iNY/ymjIvJBJxxAVC
        CmgMAv7VCPgWwu+dDb82BT7tS3jdX8DromswCIG9r8DeuwRidu3BhUtxOmGzOfM2ZDQ2GjN5ijzAAahJ
        KimPI8oRwcOS4yM1B7OF1GiiTJCgn/ARHsJNOIkswkZYCHNONtR3gM65EOjA3wcT0RRocR7cXPYSTHso
        Zmxf4MYEOmo5r7WX1/6REDfdIMJELxLH+Jp0lH8tH/cdMZ+YRUxHwPs1MRV+zxQiGj7PRHi1CcQ4ijCO
        AvSG/3x5eLo9jn1bt+DwsbMwGKwkbEdGhk2HyWSn/c08NS5DhQoVTpNyT6IYETwcWZqo7/Atc07IZ5KI
        lTARBiKNSCauEVeJBEbySl7+fIZ7b08RviTR2YziN3z+ZvgCJxCffJA2lOilEGkkR7I+kvceIWKIrcQ6
        /m0VIeII6aXEIuJbCkFX+Ocw6jOJrxl5CuANkfeMJ/mxxGh4XIQWBe+NKvBH5sGR1Quxe98xkjUgPd2K
        W7csOkSQ2NgkjB49xluwYME1pNyUeFInL+tGQzUWkxk9C4teAkleYXSvFCDh1xiwBkBqdxY+RtLIDVp3
        0wmX6AhG0p3KjWYQN3mbJN3nYTfsReLPa+HPJFHtMLGPkNu76CZG2buF2EiiEm0RYAVBAfyLCaZemLxf
        yE+D38fIeyfD551AAWh9T4i8ewQ8zmHQLF3hyazDNMuFU/PHYVvMUSQkpODmTQtSU0060tIs+mGIx+MM
        0v2KqETI8Ti44uqrCAwgcVtdEtxBy55j8WH0nCTovEWQpMNAdyTzMbSthfebGE0LYWek7Yd43w98zB7c
        SlwDUwqj6xbi/LsuAIunh9fVI89894WjL+QZeZ18OPKzg+T9jLzvK2JSiDwt7xlDSNRJXiN5W39o6V3Z
        4hikYXlw8aue2Lj7KC5dStArfnJyBlJSjPxpxMqVG1C1qj79DSBeJIL2l3W2jqrF9ueDOZKW5dKsJMci
        ZGLlN54iTt6BiflqOkiQsFUE4O+ZB4gYRn07kuJWwG1ilHUB2EUk+p6dxDaC5HXr83QYJu+7n/wMgpH3
        h8j7xlMARt3LoucZReLDic+huT+DZugOd1okXL6mwOT8iB/RDGu3H8KZsz/rxK9fT9cnv7i4G5gy5Wt/
        sWLPbyPd1sRTOvHw2vGeKu5roxyIp5XgYoGTCAtZkjedDkFuM9pmVmszI2uhve28bacYYnfHTjiM65Fy
        ZTkCWYz2beuTvPYw8pL3TKkHyDPf/dHERPj8X1IARt07ihgJj2dYkLyH5O29Sb4LXKnd4ERLFt8iuNH7
        XazdtAdHj50neQOuXr2JxMR0ffrr0aOnndPfLNKtRvxJJx5em6qo/M6mKglHS1EAWj6Dldl4noTFBcx3
        gZm3Lfyb9QxBcWyMvJC3s7pnkqRjCzKSV8CQtJLRp+U1/l3yXmPea5spAGcHL3u673uCs4REXi94LJ56
        zt9NnpbXyTPqPiFPy3uGEkNIfjCj3w/ujAi4bhI3KIC/LfxbX4Sp68tYu2Yz9u47ifj4NCIV166lY/Pm
        Xfjggw+ukupwQqa/B0b4bNZ66ig2s2/jGgVIIH6iCJwJTLEkT0HEFRY6wUoXiPVtQp5pYCfJTOZ2pkR/
        CUsFoyw5r5Nn5IW8toECsOh5KY5OfgnBguebS9KhgqfbPhz5cUSIvI+W935+h7ynP9zWrnCld6QAdEBK
        FEfd9vCeeAOujn/G+hVrsH3XYVy+nKJbP+7yDcybtxCvlCm7nzw7EzK1PrgM76tV+JYjJ2hv4/WQABxM
        xAVm1gIzU8BynORpfStz3sYIC3k7SWZthGb+HkmXF8FvJ2F3OPKsBUJeI3kPyXul5Ql5HpF981jlaftw
        qwsXvLDtfSPvkPfS8p5B0LwD4M4kecMnFKCzLoBTBLB15MRZGd72j2LrwnlYv+UHFsJEtr4UnDsXh/5D
        hjoezZljAWnWrZxPPYm3HvLBSmptNRnj2QnAjVrSOQNIGpC8UcjT8uHct7KwWZnbthB5O1uaYy3MNxbj
        1lUWNadEXWqAkOd9Ql5jxfeQvJfkvUJ+PkkH+7w/3OrCBc8nBS8UeV+IvHcQT4i0fRYjbmxHATroAjhv
        dtUFcBh52/w+Ap1y4Yevv8D362Jw9mw8XZCKXftOYEDjDzMnFVanksqqg65KKtb4ptpYNKd6lrTvtMKE
        WqqnfrryTCYpdgEDLW9kvhvDhY+WN7OwCXkrc95G29tZ2OwkmLUCqQnzYU9lcXNTADfv08lLOgh5/t1D
        cbwsel6S935DzGJ/lyFHyIf6vJAP57yXOe+l7YW81gtuO6NsagtXBqNv6MTuHAFnWlc4krvDcTOSh536
        AA9Qx8b0xNK1MTh+/CcKkIYly9dhVqeXcW04ua0jvlew/FWZi+XS3wuQzw6C62IN9WGgveJRjSc9p5kC
        SNsjeen3JlreTMtbmNsWRtdKglYSFPKZK+G1LMX12LnwmVnkhLybwmgsehorvsaip7Hie0je8y2JM+9l
        pvdOD5KXCc/LvPeyz0urk2rvZbUX8hJ1J/u8tW2QvJHkMzrCmU4BaH8HO4AjqTuyUnogS+PZZHQ+XBjQ
        FAtX7eLgcw4XLiYhevJ4rJiXF8ZEkteIhQrb/qISSXkQ8ZJOXta+yqqUr7lyIbExoyQpwCpvZL4LeRPJ
        m2l5C/PaQmtbmdc2krcxXbKWwXZzPlLjOb9nkbRbaoD8pBhh8horvmcBAh7mvYfkPTMIWj802/u8HG/1
        Xs8+L9VeGwDN2Q1uW3u4zTxwmWl7Y/u7yEeQPKNP+2ddJ/nrvZDp+xiB2UVw85NSWLxkLTvBWRw+8hPG
        jmqDzcsU7Ekkf5PgEXtAQXWSlHsQz+vkZS0vr550fahu4cSbrAM8rBgY+Qzmu5GWN9HyZkbWzMhaSM5K
        claSs5Fc5iLcujYb5iSSdNIVLooj5N0UR2PF15j32sIgeVrf7xHrS/S/Ink51JC4ezi8zoEcaXvCY4vg
        eBsibmpHkLiROR8mT+s7xPpsf1m0f1ZiT2Rd7Q27pz0bzUvwNMyN7+bM49H4LNZviMHYYeVxYKOClQ7w
        n1fIrKm8pfOo1aR873lgVCmVw1ZDncaWghTgKskz+hmc+40kbxLyJGdmTluY01bmtJU5bWPVt85F8uUZ
        0DJY5IS8i85wCXn+7qEAnsUIaMx7NyPvpOUzx/E5w5kuA+E1fQpvRiTRGR4S9NDiGuEm4TCEuJ7zUvRC
        5G2JEfh5czPEjK+OVZHlMbd+KSzs8BI2dHoaR9/MhsWD+mDj9iOYNWsOvhpdACd3KpjlMLdK4fDLSs4D
        0URF4k4RlGWsqjZhgZwKmftGcQALmpGWN5KYmcTMJGYmMQujamU1t8/jxmYiNY5HVxuFCee9i8Sz2OfN
        PMoaxiOQNhz+lAHwJ/PomtITvpRu8KaSOKu451aXIEhQM3SGW0cnHXqruyXVXtAFhkvtsXnQ2xj1cgH0
        yZ4NQ5TCSOILYjQxlOCgjz65cmLIm2+jf4s6mDpa4UwMBbhCAUYoTCysLpJqf+Le84Cs1CpqRrAVCmEW
        wQxGneMtTCRlouVNJGam1S2c4Bh52GbBcWsa858CsBjqrkidRgON4WlyGAJxgxG4QuJX+8F/rS/81/vA
        l8Sop/TiEbYHPDxletKi4LnZDRrFcFOIMPQhR/q8gFE/NLMGhhZ/HKxcWPToozhRqhSS6taFPSIC7r59
        4ezVC7datMCFt9/G+kKFdEF6Z1MY+KrC+ukK6UcUPE2Vv3p+tZVUHzwPyLpWWQ1EHwrAwQQ2zgEGEjcK
        aHkTyZlZyc0kb+H4ap3JKHN8tUQj+fhQHhDHkfREIG4sMQq4LAJ8Dv+VwfAnDITv6gD4EvvBSxG8Sb3h
        Se4FD93gSekOjUK4U6MIFj7CRXcInLxti4/A3MYl0Z2EZufOjYSKFXnyGwaspSN3M0V/4DR6gIV6P+tV
        DOvVdhbq2axJrVtjwzPPYCCf1z+fwqYohaNlVWaebGo2qT54HpD10zvqI7SiAM7BHG547E2n3SW3jbS8
        iZY2sdKb51AAks+cAaSMAI60YudrgOT1bZC8MwrphwfAfnYYvLEjgXgKkTAcgYQh8CUMgpcieK71gyex
        LzwUwkM3aBRCS+4JN1uZm2K4QnASjqQozG1UEvQrtjKqbpIScviOxXcRg7GAe/qWAZnPfclPgfxtKYO1
        hHsePhznypXD6Bw50D8nU+MJPf/HE2WIB9/SP15Rlfc3UBpS+EIengHSafcMAS9spOVNtLqQt9LmP3YH
        Nr0PbKwJ7PgAgV0N4drZGMZtTXFjSwskbmuLGz9EwnS8D9yXBtENnzE1PmM6iBA8x1MIjUK4E3n/dZ7s
        2MpcSUE4Bfz90Iw6iCL5bYwk2rYFvvwyiDFMsX+EsXTipEnAoEG4WqkSPnvkEXTOptycgeUNkTv9/+61
        +nX1lFZbmXGmCuuACECVM6iukZY3kryZUTdPAQ634cT8LierasBmirCtHrCTk1hMQ1qS2Fcfvn31YI+p
        h5s7GyBxezMk7WlLd3RB1rle8MX2RSC+P3zXKATrg4tiuFgjXNf6wKmjNwxnIzH4uccw97HH4GnCIefT
        T9nDewHdKbwgKurvQx7TowenQw52rBMHypZFP4pZVanDpPo2Id8tundNL6VyZ1ZWF7GtaFAAAwUw0HIZ
        jLqJUbcQh0h+aQVgNUVaV50OqAVsqcPc+wDY1YAiNLotAg5RmCO1EThSC44DtZAeUwfXKdS1Xc2Rtr8t
        D5bs+ReiKEgv+OP7QEtgMUvojyxiw4DKGJw9OxLLl4f27LNwligBDwucvxZfrx6v++GHQH2+RgO+Zhjy
        u/z9AzqSBdJXpQrcJO4oWhTaG29gTpEiiFQqq4BSnUi3UJD1vSubqYLahUX5gq3QQPvLe/MZU0meOB3B
        3CsHLGMhWlkZWPMesL4GU+FhIhD7efsg/3aI9x3lY47zscerw320Goz7aiJ5dx0k7KBD9jRD+sE2cJzq
        BO+FSLh/jMKQF57EChJ3kYCRkbMRdiKTVnb86U9wPfEEtIIF4Xn6aXgKF9Z/ak89BXeBAnDmz4+snDn1
        xwvMhIN/+5ECDsiWDe8ptY5c3yQedMGtCmoevsxGATj8GNn60qODtr9EC377elCA7/4KrHiHgwVdsJZp
        ICJsrs2n1KUIjABtjz0hEfbx9gERgfcdZroc4+NOsG6c4vNOvQffiarIPFQNaTG1cHVHPSRsb4QTM2ui
        F1vYuQoVYPvzn8HBHTuJtQR3fhvy+8Nw92PWE2eIW4SJAkygQC149iPVRsTtD3Nur6QKaoT+0Zi8TWWh
        CAYWHQNbnER7TmkeJijAEqbAsvtFIKmwCCyK2EU7igh7RQSmxH7+HnbDEQpxlI89RuFOECeZShQjcLIa
        XIerY1OfUhjKyp1UuTIycvGIy81PfImTXr9+2Chg3/8l2NS/Pxa1bImZdM11XsNSujQWv/giOipFUyh2
        Vv1IfO+Kq6Da4WMK4GIby+Tx18iKer4rMLMU8E2ZOy7QRWAqfM9iuLpqUIQNd4kQLowigqSELoS4gQ45
        yPt0R4gYfLykxzEBn880WdnueYzLlw+G995DEje+g1gnLfCfWGnnz2Mua0ksr5FRvDg2shZ0U0ojVQ6O
        qqRO+u51rpx6119HeZHOfHcfYvQ5dEiOTy1BB7wKzC1LEd6gCOVZDN8Glt8lgnQFEWETSd3uDiS8O5QS
        IoJeIPn7fhGCjtDFIA6HBCFm1yqMyY8/DkONGviZG99ObP7ooxClX7dSjhzBIgpwnte48dxz2P3OOzJU
        eUlVPh4rrZO+e20qrZ7xvqfs+JEE5COrpL5B60+jAOICEWHeaxw4KMLisAiVgiKsCjlBaoLMB7oIJCbF
        UReC5MOOCNcHXQw6RZyh4wPM//A5TKIA6az2l5gK4oCd/6QAaUePYhmvcZbFL7lkSWx/992wABMJGYju
        XUtfVnkdb6t47CjJp5+l/TsB0cWCDpj+EjDrFaZCWAQenW+LEHKCiCD1Qtygi0A3SIfQC6QIQbLSKfZQ
        DBEinB4iiLiDWN+xFEZz3k9p3BjxnAD3UoAfmMv/zEo/fRprOEJf4PXSGP1Vb72FCKUcpDqBeOi3xLKZ
        y6r9WPAEn36GG2oBjCsMTPkLXfDiXSKwHsy/T4RwTVglLTKUEutZ4DYwhcQNIkTYETsYbRFDIM7Q3RF0
        yMHPyunt6nLz5khm4TrGFrb5hRdwoksXnOBQc6Jz51+EU1270mANsJVtM5Yt0sCBahZdwJMQO6saRchX
        8R9c6WXVUoyVd4j3coPNgJEFgcl0gS4CnTDjfidITbirMK5gSqwMdQjdDRRB0iJcH7ZQDL1QCpj/uiAh
        UYiU+e+he+7s2MsiaGrYEFc4BF1g/p568slfjTMkHsvnJ5Upg8SOHTGMTqjDWk+aciT+i074/pXwuhqE
        JuwE6ZFMIm4s+nHO4M/dJQKdEBZBrwl3FcYlb3FOkJQItUndESEhwvVBhJAJciOFkPPEJgqxiUJspAAb
        60NbXw8TyhVENHu2keNvEvv3dVo3iXPBP4Nrr78OS6tWNGAdfKpU4HmlWFdVO+Kh06DqUEgVNryqfsaQ
        XOwEnApP5ebhggcSXYTn7xNBCiOLZLg7yJwQFmIpRRBHLKcIyynCCgqwggKspADr+HMTf99KYfbw/qN8
        znmKGVsCgdiiODIzP7pzGPqBm87s2RNJPNCkVKv2q5HMWcLA0Th5wACMYCp9pNRNUvyaePiROLRyziqu
        mrteUw7Ml5mAiMnLU9ZDRPiaxXIGRZjJzc9mOsymCHMownwKsJhYTmJriO287yAfd/YF4MKzwMWngJ/y
        ExT3eHamAl9jKTGFGMIRth2Hn0IKQ1jBr1AA5+DBSON8f5Pz/k3m9S9BGruIiZHPio7GLNaSHqz+RZSS
        r8jKG6Ji/3vfEbpvPbauhBoXeJsbWk/IN0OOcLMTWRBHU4RxxZkaFGE6CX3DurCE2MAU2Utyx/iYE6wb
        Z5g65x+lg1hPdnO8/p7XmEWMJnoQHykEail43lV+Uzml/fSysu4pptKWPqfixxRRZ1o+rs50UMojqZA6
        bhxcQ4Ygo1kzGFgcDS1awPDxxw8H70tv2hQ25rxjxgysfP999GEnqRHM/ckEjwMqr5D8e0veMCi8u4T6
        Du9wsxsI+WrMeabFFhKLeYwRpSuO5eEoS4L7SFA+eBDHTCI+JyKIhgr+qirA1upNelVlHX9BZWx4XiXN
        LKouDSykjrYtoHZVyqtWFcyhvsmVTe/NMqHJNzjlW1ztyyo1mzfco/PkwUlWdvfUqXDSzhaSM3/yCcwd
        OtwBf7e0bw97t27QxozBjQkTMOu11zjZKzRTKjWHUot4TXk7TL4d9nejH17yJaJi+0uozahEMlOJtYRE
        8QtCvsbGsTlQk1GsqPzG15V28UVl/eF5dXPls+rqV0XU+U+fUocaPK62lMitFud7RE2jqqN5zYFEFNGe
        kLen6xKVCTmhvUzI93fkQ0z5B6ni5ZUa0IrHlL4kspjH41g6IXPmTLinTYN38mT4CR/h+eorOPn3G7T8
        FjphBIcpet1TU6krfN2FvJZ8r1GuL/+F9ouXHBlLbPqLWp31qnKll1Gucy8o09ZnVcq8Z1TssELqxCcF
        1O6KedVqRnFO7mxqEh8/jKDrVFdCPoKSkxf3ob8RIcNHCUIOIlKF5b15+QcGeYtaPrS8PzLyt0J5lKpd
        Xan1nyhlk3d+o9kWl/G8v43psI9u2NOuHVYz5yXi0up6KeVvzoJXNJjzYnvZh5C/963wX7hEMdk0T5I6
        uS+Izwj5thXTVLG4qnqERPENQl6oOCGfvcm7r3LslIorjvpF1rtvSTrKf5a+WkCpjpV4nqei8WRkYkg1
        whtJdOKE11KpjNpKXaaFpNVNI6TgSc6L7X9V5O9f4gSJmLyf9goh76vLR0vyX57cl/6lw78VxX/VCu9B
        UkVcJWkk31SVg42MtgKZ8ORr8NLnpdVJtZeC91vt6XdfQkSEEFdJGsmRVk51crCR9JLxVkiLUOK6B9/9
        vb2U+j8jglXiloaNHQAAAABJRU5ErkJggg==
</value>
  </data>
</root>